# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  diagrams:
    name: Draw diagrams
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - uses: nrwl/last-successful-commit-action@v1
        id: last_successful_commit
        with:
          workflow_id: 'plant.yml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: echo ${{ steps.last_successful_commit.outputs.commit_hash }}
      - name: Get changed files
        id: changed-files
        run: |
          echo "::set-output name=all_changed_files::$(git diff --name-only --diff-filter=ACMRT ${{ steps.last_successful_commit.outputs.commit_hash }}..HEAD *.puml | xargs)"
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
      - name: try last action
        uses: technote-space/get-diff-action@v6
        id: git_diff
        with:
          PATTERNS: '*.puml'
      - name: List all action
        run: |
          for file in ${{ steps.git_diff.outputs.diff }}; do
            echo "$file was changed"
          done
      - name: Generate SVG Diagrams
        uses: holowinski/plantuml-github-action@main
        with:
          args: -v -o images -tsvg ${{ steps.changed-files.outputs.all_changed_files }}
      - name: Generate PNG Diagrams
        uses: holowinski/plantuml-github-action@main
        with:
          args: -v -o images -tpng ${{ steps.changed-files.outputs.all_changed_files }}
      - name: debugger
        run: |
          tree 
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: plant uml images
          path: plantuml/images/
      
